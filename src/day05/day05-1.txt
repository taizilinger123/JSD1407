回顾:
1.循环:反复做一件相同或相似的事
    三要素:
      1)循环变量的初始化
      2)循环条件(以循环变量为基础)
      3)循环变量的改变(向着循环结束改)
2.while
3.do...while
4.for
5.break,continue(了解)

---------小代码
---------3个经典案例


正课:

int sum=0,num=0;   //存和
for(int i=1;i<=10;i++){
   num = num*10+9;
   sum = sum+num;
}
System.out.println("sum="+sum);
sum=0,num=0
i=1  num=9    sum=9
i=2  num=99   sum=9+99
i=3  num=999  sum=9+99+999
 
num----每次加的那个数
i=1  num=9
i=2  num=99
i=3  num=999
i=4  num=9999

分析: 9到99
      9*10+9

      99到999
      99*10+9

      999到9999
      999*10+9


for(int n=1;n<=9;n++){
   for(int i=1;i<=n;i++){
      System.out.print(i+"*"+n+"="+i*n+"\t");
   }
}

int n = 8;
for(int i=1;i<=n;i++){
   System.out.print(i+"*"+n+"="+i*n+"\t");
}

int n = 7;
for(int i=1;i<=n;i++){
   System.out.print(i+"*"+n+"="+i*n+"\t");
}

int n = 6;
for(int i=1;i<=n;i++){
   System.out.print(i+"*"+n+"="+i*n+"\t");
}

int n = 5;
for(int i=1;i<=n;i++){
   System.out.print(i+"*"+n+"="+i*n+"\t");
}

for(int n=1;n<=9;n++){   //外层循环
   for(int i=1;i<=n;i++){  //内层循环
      System.out.print(i+"*"+n+"="+i*n+"\t");
   }
   System.out.println(); //换行
}

嵌套循环执行过程:
  外层循环走一次，内层循环走所有次
建议:
  循环层数越少越好
break:
  只能跳出一层循环


//外层一次，内层所有次
for(int i=1;i<=5;i++){
  for(int j=1;j<=10;j++){
     System.out.println(i+",,,"+j);
  }
}

1.数组可以装一组数，必须类型相同
2.数组按线性顺序，一个跟一个
3.数组也是一种数据类型
4.数组new之后，数组中的每个元素都有一个默认值
    整数:0  浮点数:0.0  boolean:false

 int    a = 5;

1)数组的定义:
    int[] arr = new int[4]; //每个数都是0
2)数组的初始化
    int[] arr;  //声明数组
    arr = new int[4];  //初始化
    int[] arr = {1,5,8,3}; //只能声明同时初始化
    int[] arr = new int[]{1,5,8,3};

    int[] arr;
    arr = {1,5,8,3}; //错误
3)数组的访问:通过下标
    下标从0开始
    int[] arr = new int[4];
    System.out.println(arr.length);//数组的长度4
    arr[0] = 55;//给arr中的第1个数赋值为55
    arr[4] = 99; //错误，数组越界，最大到3
    System.out.println(arr[2]);//输出第3个数

    //遍历数组
    int[] arr = {1,8,5,3};
    for(int i=0;i<arr.length;i++){  //正序
       System.out.println(arr[i]);
    }
    for(int i=arr.length-1;i>=0;i--){  //倒序
       System.out.println(arr[i]);
    }



    //数组的遍历
    int[] arr = {2,9,6,1,56,67,234,45,7657,234};
    for(int i=0;i<arr.length;i++){
       System.out.println(arr[i]);
    }

    System.out.println(arr[0]);
    System.out.println(arr[1]);
    System.out.println(arr[2]);
    System.out.println(arr[3]);



最大值算法:
1.假设数组中第1个元素为最大值
  int max = arr[0];  //max装最大值
2.循环遍历数组中剩余的元素
  for(int i=1;i<arr.length;i++){
     3.将数组元素与max比大小，
       若数组元素大于max，将max设置为数组元素
     if(arr[i]>max){
        max = arr[i];
     }
  }


int max = arr[0];
for(int i=1;i<arr.length;i++){
   if(arr[i] > max){
      max = arr[i];
   }
}
System.out.println("max="+max);


import java.util.Random;
main(){
  Random rand = new Random();
  int num = rand.nextInt(100); //0到99之间的
}

  
声明一个整型数组名为a，可以存储4个整数
int[]  a = new int[4];
double[] s = new double[4]; 
String[] ns = new String[10];



int[] arr = new int[5];
int i = arr.length;  //5

arr[2] = 88;
System.out.println(arr[4]);


  能用一层循环就不用两层
  能用两层循环就不用三层
  后期写个程序需要4层循环-----设计有问题
break:只能跳出1层循环



for(int i=1;i<=500;i++){
  for(int j=1;j<=10000;j++){
     for(int k=1;k<=10000;k++){
        System.out.println("aaa");
	if(条件){
	  break; ----j++
	}
     }
  }
}

---500万*10000


i=1
  j=1/2/3/4/5/6.../10
  j=11
i=2
  j=
  



n=3
  i=1 1*3=3
  i=2 2*3=6
  i=3 3*3=9
  i=4
  换行

n=1
  i=1 1*1=1
  i=2
  换行
n=2
  i=1 1*2=2
  i=2 2*2=4
  i=3
  换行


分析:
1)5个数需要冒4轮
  for(int i=0;i<arr.length-1;i++){ }
2)每一轮比多少次
  for(int j=0;j<arr.length-1-i;j++){ }



99,25,45,2,23
for(int i=0;i<arr.length-1;i++){  //控制轮
   for(int j=0;j<arr.length-1-i;j++){//控制比几次
      if(arr[j]>arr[j+1]){
         int t = arr[j];
	 arr[j] = arr[j+1];
	 arr[j+1] = t;
      }
   }
}
25,45,2,23,99
i=1
  j=0 25和45比 不换
  j=1 45和2比  换  25,2,45,23,99
  j=2 45和23比 换  25,2,23,45,99
i=0
  j=0  99和25比 换 25,99,45,2,23
  j=1  99和45比 换 25,45,99,2,23
  j=2  99和2比  换 25,45,2,99,23
  j=3  99和23比 换 25,45,2,23,99
  j=4

第一轮:
  99和25比 换 25,99,45,2,23
  99和45比 换 25,45,99,2,23
  99和2比  换 25,45,2,99,23
  99和23比 换 25,45,2,23,99-----冒出了99
第二轮:
  25和45比 不换
  45和2比  换 25,2,45,23,99
  45和23比 换 25,2,23,45,99-----冒出了45
第三轮:
  25和2比  换 2,25,23,45,99
  25和23比 换 2,23,25,45,99-----冒出了25
第四轮:
  2和23比  不换-----------------冒出了23
      

小结:
1.嵌套循环
2.数组
  1)定义
      数据类型[] 数组名 = new 数据类型[长度];
      int[] arr = new int[5];
  2)初始化
      int[] arr = new int[3]; //默认值为0
      int[] arr = {2,4,7};
      int[] arr = new int[]{2,4,7};
  3)访问:通过下标/索引
      int len = arr.length; //长度
      int num = arr[0]; //取第1个元素
      int num = arr[arr.length-1];//取最后1个元素
      arr[0] = 88;  //赋值
      System.out.println(arr[0]); //取值
  4)复制
      //从a的第1个元素开始
      //复制到a1中，从第3个元素开始
      //一共复制4个元素
      System.arraycopy(a,0,a1,2,4);
      //将a数组复制到b数组，b有6个元素
      int[] b = Arrays.copyOf(a,6);
      //给a数组扩容
      a = Arrays.copyOf(a,a.length+1);
  5)排序
      Arrays.sort(arr); //升序
      冒泡


作业提示:
1.给一个数num，通过代码判断num是否是质数
  8% 2/3/4/5/6/7
  ----只要有一个为0，说明不是质数
  88% 2/3/4/5/6.../86/87

休息10分钟