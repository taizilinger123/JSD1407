回顾:
1.方法
    修饰词 返回值类型 方法名(参数列表){
       方法体
    }

    //方法都是用于操作数据的
    //如果所操作的数据比较固定---不需要参数
    //若所操作的数据不固定-------需要参数
    public static char[] generate(){
       char[] chs = new char[5];
       给chs赋值
       return chs;
    }
    public static int[] check(char[] chs,char[] input){
       for(int i=0;i<chs.length;i++){
          for(int j=0;j<input.length;j++){
	     if(chs[i]==input[j]){
	     }
	  }
       }
    }
    给你一个需求，void()，写方法体
    猜字母游戏-----下周一之前，熟练写下来

    public static int[] generateArray(int len,int range){
       int[] arr = new int[len];
       for(int i=0;i<arr.length;i++){
          arr[i] = Math.random()*range;

       }
       return arr;
    }

正课:
  main(){
    ...
    ...
    generate(?);
    ...
    ...
    check(?);
  }
  generate(?){
  }
  check(?){
  }

面向过程编程:一堆方法,调来调去
面向对象编程:以对象为核心，围绕着对象做操作
面向接口编程:面向对象的基础之上，抽接口
    复用性好、可维护性好、可扩展性好、
    移植性好......

面向过程:实在
面向对象:抽象
  A,B,C
  只放在一个地方更合适---抽象所在

晕是正常的------多练、多想

不晕两种情况:
1.什么都不懂
2.以为自己不晕---语法掌握

6天:掌握语法，知道何时用

讲完打飞机小游戏
------面向对象6天内容实际的应用


缺陷一:缺乏对数据的封装
缺陷二:数据和方法分离状态

class Emp{
   String name;
   int age;
   char gender;
   double salary;
}

将name,age,gender,salary----包到一种类型(Emp)中

public static void print(Emp emp){
  输出emp.name,emp.age,emp.salary,emp.gender
}
public static void print(String a,int b
                         char c,double d){
}

public static void print(String name,int age,
                         char gender,double salary){
  输出4个变量的值
}
main(){
  String name = "zhangsan";
  int age = 25;
  char gender='男';
  double salary = 5000;
  print(name,age,gender,salary);

  String a = "abc";
  int b = -1000000000;
  char c='国';
  double d = -10000; 
  print(a,b,c,d);
}
笔记:
1.现实世界是由很多对象组成的
2.现实世界是先有对象，再抽出类
  代码中先创建类，再创建对象
3.一个类可以创建多个对象
  同一个类的多个对象，结构相同，数据不同
4.类是一种数据类型
  只能包含:
    1)描述对象所共有的特征:------变量
          属性-----静的
    2)对象所共有的行为:----------方法
          行为-----动的
5.new后，成员变量有默认值
6.创建对象语法:
    类名 引用 = new 类名();
  其中:new 类名()是在创建对象
       因对象为数据，所有声明引用来指代数据
7.访问成员变量、访问方法
  ----通过点来操作，语法:
     引用.成员变量
     引用.方法名();
8.基本类型之间画等号----在赋值
    ------身份证复印件
  引用类型之间画等号----指向同一个对象
    ------房子钥匙
9.null:空，表示没有指向对象
  若引用的值为null，则不能再进行点操作，
  否则会出现NullPointerException异常











class Teacher{
   String name;
   int age;
   String address;
   double salary;
   
   void teach(){
   }
   void eat(){
   }
   void sleep(){
   }
}
类中只能包含成员变量和方法
class Student{   //学生类
   String name;
   int age;
   String address;  //成员变量

   int eat(int num){ }
   void sleep(){ }
   void study(){ }  //方法
}
class StudentTest{   //测试类都包含main
   main(){
      Student zs = new Student();
      zs.name = "zhangsan";
      zs.age = 25;
      zs.address = "河北廊坊";
      zs.eat();
      zs.sleep();
      zs.study();

      Student ls = new Student();
      ls.name = "lisi";
      ls.age = 18;
      ls.address = "黑龙江佳木斯";
      ls.eat();
      ls.sleep();
      ls.study();

      Student ww = new Student();
   }
}


int[]   arr = new int[4];
   ----数组元素有默认值
Student zs  = new Student();
   ----成员变量就有默认值


   
步骤:
1.找对象：一堆小格子
2.抽类:格子类Cell
3.设计类中的成员变量和方法
4.创建对象并测试   

步骤:
1.找对象------好多好多格子
2.抽类------class Cell{ }
3.设计类：
    1)成员变量---row行号,col列号
    2)方法

方法是用于操作数据的
class Cell{      //格子类
   int row;   //行号
   int col;   //列号

   void drop(){  //下落1个
      row++;
   }
   void moveLeft(int step){  //左移step个
      col -= step;
   }
   String getCellInfo(){  //获取格子坐标
      return row+",,,"+col;
   }

}







class Cell{
   drop();
   moveLeft();
   moveRight();
   getCellInfo();

   print(); -----打墙+格
}

格子对象没有打墙的行为



1.打印雇员信息
2.Cell类+成员变量
3.Cell类的方法
4.创建Cell类对象+打墙+打格









房子-----------对象
房子钥匙-------引用
配了/复制一把钥匙给他

















new Student(); //创建学生类对象
new Teacher(); //创建老师类对象

对象是一个数据

创建对象


类型       引用类型变量  指向            对象
           引用---简称
Student     zs            =           new   Student();
Teacher     wkj           =           new   Teacher();
ClassRoom   cr            =           new   ClassRoom();
Cell        c             =           new   Cell();

Student zs = new Student();
zs.name = "zhangsan";

int num = 5;
int n = num;



Cell c = new Cell();
c.row = 5;
c.col = 4;

for(int i=1;i<=20;i++){     //行号
   for(int j=1;j<=10;j++){  //列号
      if(i==c.row && j==c.col){
         System.out.println("* ");
      }else{
         System.out.println("- ");
      }
   }
   System.out.println();
}


main(){
  Cell c = new Cell();
  c.row = 5;
  c.col = 4;
  print(c); //Cell cc = c;

  c.drop();
  print(c);

  c.moveLeft();
  print(c);
}
public static void print(Cell cc){
  //双层for循环+if判断
}
















i=1
  j=1/2/3/.../11
i=2
  j=1/2/3/.../11

- - - - - - - - - - 
- - - - - - - - - - 
















//练习:
1.创建Student类，包含:
    特征: name,age,address
    行为: study(),sayHi()---输出3个变量的值
2.创建StudentTest类，包含main()方法
    main方法中:
      1)创建Student对象zs
        给变量赋值，调用方法
      2)创建Student对象ls
        给变量赋值，调用方法

Student zs = new Student(); //创建对象






英雄机:
  特征:
    width，height，x，y，image
  行为:
    move()，shoot()

小蜜蜂:
  特征:
    width, height, x, y, image
  行为:
    move()









类         对象
月饼模子   月饼
图纸       高楼

class Student{  //学生类
}

Student zs = new Student();
Student ls = new Student();
Student ww = new Student();











学员管理系统:
对象:
  学员
  老师
  教室
  课程
抽出类:
  class Student{   //学生类
  }
  class Teacher{   //老师类
  }
  class ClassRoom{ //教室类
  }
  class Course{    //课程类
  }

  //创建对象
  //Scanner和Random就是类
  Scanner scan = new Scanner(System.in);
  Random rand = new Random();

  创建对象语法:
  类名  名 = new  类名();