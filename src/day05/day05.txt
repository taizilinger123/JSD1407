回顾:
1.循环:反复做一件相同或相似的事
    三要素:
      1)循环变量的初始化
      2)循环条件(以循环变量为基础)
      3)循环变量的改变(向着循环结束改)
2.while      当什么什么时候用
3.do...while 直到什么什么时候用
4.for        固定次数循环用
5.break,continue(了解)

---------小代码
---------3个经典案例


正课:


int sum=0,num=0;   //存和
for(int i=1;i<=10;i++){
   num = num*10+9;
   sum = sum+num;
}
System.out.println("sum="+sum);
sum=0,num=0
i=1  num=9    sum=9
i=2  num=99   sum=9+99
i=3  num=999  sum=9+99+999
 
num----每次加的那个数
i=1  num=9
i=2  num=99
i=3  num=999
i=4  num=9999

分析: 9到99
      9*10+9

      99到999
      99*10+9

      999到9999
      999*10+9


for(int n=1;n<=9;n++){
   for(int i=1;i<=n;i++){
      System.out.print(i+"*"+n+"="+i*n+"\t");
   }
}

int n = 8;
for(int i=1;i<=n;i++){
   System.out.print(i+"*"+n+"="+i*n+"\t");
}

int n = 7;
for(int i=1;i<=n;i++){
   System.out.print(i+"*"+n+"="+i*n+"\t");
}

int n = 6;
for(int i=1;i<=n;i++){
   System.out.print(i+"*"+n+"="+i*n+"\t");
}

int n = 5;
for(int i=1;i<=n;i++){
   System.out.print(i+"*"+n+"="+i*n+"\t");
}

for(int n=1;n<=9;n++){   //外层循环
   for(int i=1;i<=n;i++){  //内层循环
      System.out.print(i+"*"+n+"="+i*n+"\t");
   }
   System.out.println(); //换行
}

嵌套循环执行过程:
  外层循环走一次，内层循环走所有次
建议:
  循环层数越少越好
break:
  只能跳出一层循环


//外层一次，内层所有次
for(int i=1;i<=5;i++){
  for(int j=1;j<=10;j++){
     System.out.println(i+",,,"+j);
  }
}

程序=算法+数据结构
算法：解决问题的步骤流程（顺序，分支，循环）
数据结构：将数据按某种结构来保存
好的数据结构会导致好的算法

1.数组可以装一组数，必须类型相同
2.数组按线性顺序，一个跟一个
3.数组也是一种数据类型
4.数组new之后，数组中的每个元素都有一个默认值
    整数:0  浮点数:0.0  boolean:false

 int    a = 5;

1)数组的定义:
    int[] arr = new int[4]; //每个数都是0
2)数组的初始化
    int[] arr;  //声明数组
    arr = new int[4];  //初始化
    int[] arr = {1,5,8,3}; //只能声明同时初始化
    int[] arr = new int[]{1,5,8,3};

    int[] arr;
    arr = {1,5,8,3}; //错误
3)数组的访问:通过下标
    下标从0开始
    int[] arr = new int[4];
    System.out.println(arr.length);//数组的长度4
    arr[0] = 55;//给arr中的第1个数赋值为55
    arr[4] = 99; //错误，数组越界，最大到3
    System.out.println(arr[2]);//输出第3个数

    //遍历数组
    int[] arr = {1,8,5,3};
    for(int i=0;i<arr.length;i++){  //正序
       System.out.println(arr[i]);
    }
    for(int i=arr.length-1;i>=0;i--){  //倒序
       System.out.println(arr[i]);
    }



    //数组的遍历
    int[] arr = {2,9,6,1,56,67,234,45,7657,234};
    for(int i=0;i<arr.length;i++){
       System.out.println(arr[i]);
    }

    System.out.println(arr[0]);
    System.out.println(arr[1]);
    System.out.println(arr[2]);
    System.out.println(arr[3]);

  
声明一个整型数组名为a，可以存储4个整数
int[]  a = new int[4];
double[] s = new double[4]; 
String[] ns = new String[10];



int[] arr = new int[5];
int i = arr.length;  //5

arr[2] = 88;
System.out.println(arr[4]);



  能用一层循环就不用两层
  能用两层循环就不用三层
  后期写个程序需要4层循环-----设计有问题
break:只能跳出1层循环



for(int i=1;i<=500;i++){
  for(int j=1;j<=10000;j++){
     for(int k=1;k<=10000;k++){
        System.out.println("aaa");
	if(条件){
	  break; ----j++
	}
     }
  }
}

---500万*10000


i=1
  j=1/2/3/4/5/6.../10
  j=11
i=2
  j=
  


n=3
  i=1 1*3=3
  i=2 2*3=6
  i=3 3*3=9
  i=4
  换行

n=1
  i=1 1*1=1
  i=2
  换行
n=2
  i=1 1*2=2
  i=2 2*2=4
  i=3
  换行
